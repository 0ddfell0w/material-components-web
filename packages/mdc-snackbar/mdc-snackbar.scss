//
// Copyright 2017 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@import "@material/animation/functions";
@import "@material/button/mixins";
@import "@material/ripple/mixins";
@import "@material/rtl/mixins";
@import "@material/theme/functions";
@import "@material/theme/mixins";
@import "@material/theme/variables";
@import "@material/typography/mixins";
@import "./mixins";
@import "./variables";

// postcss-bem-linter: define snackbar
.mdc-snackbar {
  @include mdc-snackbar-viewport-margin(8px); // TODO(acdvorak): 24px for "wide" layout

  display: flex;
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  transform: translateY(100vh);
  pointer-events: none;
  z-index: 9; // TODO(acdvorak)
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

@at-root {
  @include mdc-snackbar-surface-color(surface);
  @include mdc-snackbar-overlay-color(on-surface);
  @include mdc-snackbar-label-ink-color(surface);
  @include mdc-snackbar-min-width(344px); // TODO(acdvorak): What's the correct value?
  @include mdc-snackbar-max-width(672px);
  @include mdc-snackbar-elevation(6);
  @include mdc-snackbar-shape-radius(small);
}

.mdc-snackbar--leading {
  justify-content: flex-start;
}

.mdc-snackbar--open,
.mdc-snackbar--closing {
  transform: none;
}

.mdc-snackbar__container {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  box-sizing: border-box;
  transform: scale(.8);
  opacity: 0;

  // Prevents mdc-snackbar__overlay's background-color from bleeding past the
  // container's border-radius.
  // N.B.: This does not work in Safari. The mdc-snackbar-shape-radius() mixin
  // contains a Safari-specific workaround.
  overflow: hidden;

  .mdc-snackbar--open & {
    // Specified in the motion spec for snackbar.
    $enter-duration-from-motion-spec: 150ms;

    // Not in motion spec; needed for accessibility.
    // To force NVDA to announce the snackbar message to the user, we have to
    // temporarily clear the label text from the DOM for at least 200ms.
    // Unfortunately, this creates visual flicker. To avoid the flicker,
    // we simply delay the animation until after the label text is restored.
    // IMPORTANT: Value must be >= `ARIA_LIVE_DELAY_MS` in constants.js.
    $enter-delay-for-a11y: 200ms;

    transform: scale(1);
    transition:
      mdc-animation-enter(opacity, $enter-duration-from-motion-spec, $enter-delay-for-a11y),
      mdc-animation-enter(transform, $enter-duration-from-motion-spec, $enter-delay-for-a11y);
    opacity: 1;
    pointer-events: auto;
  }

  .mdc-snackbar--closing & {
    // Specified in the motion spec for snackbar.
    $exit-duration-from-motion-spec: 75ms;
    $exit-delay-from-motion-spec: 150ms;

    transform: scale(1);
    transition: mdc-animation-exit-permanent(opacity, $exit-duration-from-motion-spec, $exit-delay-from-motion-spec);
  }
}

.mdc-snackbar__overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-sizing: border-box;
  z-index: -1;
}

.mdc-snackbar__label {
  @include mdc-snackbar-focusable-subelement_($display: block);
  @include mdc-typography(body2);

  flex-grow: 1;
  box-sizing: border-box;
  margin: 0;

  // 14px top/bottom padding needed to make the height 48px.
  padding: 14px 16px;
}

.mdc-snackbar__actions {
  @include mdc-snackbar-focusable-subelement_($display: block);
  @include mdc-rtl-reflexive-property(margin, 0, 8px);

  flex-shrink: 0;
  box-sizing: border-box;
}

.mdc-snackbar__action-button {
  // TODO(acdvorak): How should we implement this?
  @include mdc-button-ink-color(#bb86fc);
  @include mdc-states-base-color(#bb86fc);
}

// postcss-bem-linter: end
