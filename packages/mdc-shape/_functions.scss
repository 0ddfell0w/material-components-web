@import './variables';

@function mdc-shape-flip-radius($radius) {
  @return nth($radius, 2) nth($radius, 1) nth($radius, 4) nth($radius, 3);
}

@function mdc-shape-prop-value($radius, $type: null) {
  @if type-of($radius) == "list" {
    $radius-value: ();
    @each $corner in $radius {
      $radius-value: append($radius-value, mdc-shape-prop-corner-value_($corner, $type: $type));
    }
    @return $radius-value;
  } @else {
    @return mdc-shape-prop-corner-value_($radius, $type: $type);
  }
}

@function mdc-shape-prop-corner-value_($radius, $type: null) {
  @if $radius == pill {
    @if not map-has-key($mdc-shape-height-values, $type) {
      @error "Invalid radius: '#{$type}' doesn't support pill type radius";
    }

    $radius: map-get($mdc-shape-height-values, $type) / 2;
  } @else if map-has-key($mdc-shape-category-values, $radius) {
    $radius: map-get($mdc-shape-category-values, $radius);
  }

  @return $radius;
}

@function mdc-shape-pill-radius($type, $radius) {
  @return mdc-shape-prop-value($radius, $type: $type);
}