//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

//
// Imports
//

@import "../packages/mdc-theme/color-palette";

$mdc-theme-secondary: #4285F4; // Google Blue 500

@import "./common";
@import "../packages/mdc-elevation/mdc-elevation";
@import "../packages/mdc-ripple/mdc-ripple";
@import "../packages/mdc-theme/mdc-theme";
@import "../packages/mdc-typography/mdc-typography";

//
// Variables
//

$mdc-card-hairline-border-color-resting: #ddd;
$mdc-card-baseline-background-color: #fff;
$mdc-card-baseline-drop-zone-thickness: 4px;

//
// Mixins
//

@mixin mdc-card-corner-radius($radius) {
  border-radius: $radius;
}

//
// Classes
//

// TODO(acdvorak): Only apply these styles if the element is focusable
.mdc-card {
  @include mdc-ripple-color(black, .14);

  cursor: pointer;

  &:hover {
    background-color: rgba(black, .04);
  }

  &:focus {
    background-color: rgba(black, .06);
  }
}

.mdc-card--stroked {
  @include mdc-elevation(1);

  border: 1px solid $mdc-card-hairline-border-color-resting;
}

.mdc-drag-collection {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  user-select: none;

  &--dragging {}

  &--single-column {
    // TODO(acdvorak): Is this needed? It causes jank on page load
    flex-direction: column;
  }
}

.mdc-drag-select-disabled {
  user-select: none;
}

.mdc-drag-touch-disabled {
  touch-action: none;
  pointer-events: none;
}

.mdc-draggable-item:not(.mdc-draggable-item--clone) {
  transition: transform .2s;
}

.mdc-draggable-item--source {
  opacity: 0;
}

.mdc-draggable-item--clone {
  position: fixed;
  top: 0;
  left: 0;
  transition: none;
  pointer-events: none;
}

.mdc-drop-spacer {
  flex-grow: 0;
  flex-shrink: 1;

  // TODO(acdvorak): Figure out why this hack is needed to force the element to consume width
  //border: 1px solid transparent;

  // TODO(acdvorak): Document that `width` is set dynamically in JS
}

.mdc-drop-indicator {
  background-color: #333;
  border-radius: 4px;
  width: $mdc-card-baseline-drop-zone-thickness;

  .mdc-drag-collection--single-column & {
    width: unset;
    height: $mdc-card-baseline-drop-zone-thickness;
  }
}

//
// Demo
//

$demo-card-size: 150px;
$demo-card-margin: 8px;
$demo-card-cols: 3;
$demo-drop-zone-thickness: 6px;

// TODO(acdvorak): How should clients calculate this, and how do we make it dynamic so cards can be added/removed?
@function demo-card-collection-primary-axis-size($num-cols) {
  $card-total-margin: $demo-card-margin * 2;
  $card-total-width: $demo-card-size + $card-total-margin;
  @return ($card-total-width * $num-cols) + $demo-drop-zone-thickness;
}

.hero {
  position: relative;
  flex-direction: row;
  flex-wrap: wrap;
  height: unset;
  padding: 48px;
}

.demo-card-collection-group {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  justify-items: center;
}

.demo-card-collection-wrapper {
  display: flex;
  flex-direction: column;
  align-content: center;
  align-items: center;
  margin: 0 48px 48px 48px;
}

.demo-card-collection-heading {
  margin-top: 0;
  margin-left: $demo-card-margin;
  margin-right: $demo-card-margin;
  text-align: center;
}

.demo-card-collection {
  // TODO(acdvorak): Can we dynamically add the extra width needed to accommodate the drop target?
  // Or should drop target be absolutely positioned in <body> instead of in the list?
  // TODO(acdvorak): Document the need for extra width to accommodate the drop zone
  // TODO(acdvorak): Add test cases for all width variations
  max-width: demo-card-collection-primary-axis-size($demo-card-cols);
}

.demo-card-collection--single-column {
  // TODO(acdvorak): Can we dynamically add the extra height needed to accommodate the drop target?
  // Or should drop target be absolutely positioned in <body> instead of in the list?
  max-width: demo-card-collection-primary-axis-size(1);
  height: demo-card-collection-primary-axis-size(3);
}

.demo-card-collection .mdc-drop-indicator {
  width: $demo-drop-zone-thickness;
  margin: $demo-card-margin 0;
}

.mdc-drag-collection--single-column .mdc-drop-indicator {
  width: unset;
  height: $demo-drop-zone-thickness;
  margin: 0 $demo-card-margin;
}

.demo-card {
  @include mdc-elevation(4);
  @include mdc-card-corner-radius(4px);
  @include mdc-typography(display2);

  background-color: $mdc-card-baseline-background-color;

  display: flex;
  align-content: center;
  align-items: center;
  justify-content: center;
  justify-items: center;

  margin: $demo-card-margin;

  width: $demo-card-size;
  height: $demo-card-size;
}

.demo-card--color {
  $color-value: mdc-theme-prop-value(secondary);

  @include mdc-ripple-color(white, .14);

  background-color: $color-value;
  color: white;

  &:hover {
    background-color: mdc-theme-light-variant($color-value, 1);
  }

  &:focus {
    background-color: mdc-theme-light-variant($color-value, 1.2);
  }
}
